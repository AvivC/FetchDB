# Implements a HTTP server and HTML-generation facilities

import _httpserver

Server = class {
    @init = { | port |
        self._port = port
        self._handlers = []
        self._handler_paths = []
    }

    get = { | path, handler |
        self._handlers[path] = handler
        self._handler_paths.add(path)
    }

    _handler = { | request |
        if self._handlers.has_key(request.path) {
            request.answer = self._handlers[request.path]()
            return
        }

        request.answer = "Not found"
        request.status = "404 Not Found"
    }

    start = {
        _httpserver.start(self._port, self._handler)
    }
}

# HTML generation code

_make_html_generator = { | tag_name |
    return { | code |
        return "<" + tag_name + ">" + code + "</" + tag_name + ">"
    }
}

html = _make_html_generator("html")
head = _make_html_generator("head")
title = _make_html_generator("title")
body = _make_html_generator("body")
bold = _make_html_generator("b")
italic = _make_html_generator("i")

render = { | path |
    return read_file(path)
}